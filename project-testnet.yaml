# // Auto-generated , DO NOT EDIT
specVersion: 1.0.0
version: 0.0.1
name: network-root-chain-backend
description: >-
  This project can be use as a starting point for developing your new Ethereum
  SubQuery project
runner:
  node:
    name: '@subql/node-ethereum'
    version: '>=3.0.0'
  query:
    name: '@subql/query'
    version: '*'
schema:
  file: ./schema.graphql
network:
  chainId: '5'
  endpoint:
    - https://eth.api.onfinality.io/public
dataSources:
  - kind: ethereum/Runtime
    startBlock: 10213710
    assets:
      sQToken:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/SQToken.sol/SQToken.json
      inflationController:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/InflationController.sol/InflationController.json
      polygonDestination:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/PolygonDestination.sol/PolygonDestination.json
      vesting:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/Vesting.sol/Vesting.json
      eRC20Predicate:
        file: >-
          ./node_modules/@maticnetwork/pos-portal/contracts/root/TokenPredicates/ERC20Predicate.sol
    options:
      abi: sQToken
      address: '0xAFD07FAB547632d574b38A72EDAE93fA23d1E7d7'
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/TransactionHandler
          handler: handleMint
          filter:
            function: mint(address destination, uint256 amount)
  - kind: ethereum/Runtime
    startBlock: 10213710
    assets:
      sQToken:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/SQToken.sol/SQToken.json
      inflationController:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/InflationController.sol/InflationController.json
      polygonDestination:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/PolygonDestination.sol/PolygonDestination.json
      vesting:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/Vesting.sol/Vesting.json
      eRC20Predicate:
        file: >-
          ./node_modules/@maticnetwork/pos-portal/contracts/root/TokenPredicates/ERC20Predicate.sol
    options:
      abi: inflationController
      address: '0xB612080559f0102C5d60A034C841D72b7709ffE6'
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/TransactionHandler
          handler: handleSetInflationDestination
          filter:
            function: setInflationDestination(address _inflationDestination)
        - kind: ethereum/TransactionHandler
          handler: handleMintInflatedTokens
          filter:
            function: mintInflatedTokens()
        - kind: ethereum/TransactionHandler
          handler: handleMintSQT
          filter:
            function: mintSQT(address _destination, uint256 _amount)
  - kind: ethereum/Runtime
    startBlock: 10213710
    assets:
      sQToken:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/SQToken.sol/SQToken.json
      inflationController:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/InflationController.sol/InflationController.json
      polygonDestination:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/PolygonDestination.sol/PolygonDestination.json
      vesting:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/Vesting.sol/Vesting.json
      eRC20Predicate:
        file: >-
          ./node_modules/@maticnetwork/pos-portal/contracts/root/TokenPredicates/ERC20Predicate.sol
    options:
      abi: polygonDestination
      address: '0x3519c8939b73EAA440A5b626D6090275add4bD69'
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/TransactionHandler
          handler: handleAfterReceiveInflatedTokens
          filter:
            function: afterReceiveInflatedTokens(uint256 tokenAmount)
  - kind: ethereum/Runtime
    startBlock: 10213710
    assets:
      sQToken:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/SQToken.sol/SQToken.json
      inflationController:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/InflationController.sol/InflationController.json
      polygonDestination:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/root/PolygonDestination.sol/PolygonDestination.json
      vesting:
        file: >-
          ./node_modules/@subql/contract-sdk/artifacts/contracts/Vesting.sol/Vesting.json
      eRC20Predicate:
        file: >-
          ./node_modules/@maticnetwork/pos-portal/contracts/root/TokenPredicates/ERC20Predicate.sol
    options:
      abi: eRC20Predicate
      address: '0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34'
    mapping:
      file: ./dist/index.js
      handlers:
        - kind: ethereum/LogHandler
          handler: handleLockedERC20
          filter:
            topics:
              - >-
                LockedERC20(address indexed depositor, address indexed
                depositReceiver, address indexed rootToken, uint256 amount)
        - kind: ethereum/TransactionHandler
          handler: handleExitToken
          filter:
            function: exitToken(address, address rootToken, bytes memory log)
repository: https://github.com/subquery/network-root-chain-backend
